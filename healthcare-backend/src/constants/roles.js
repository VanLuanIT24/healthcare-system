// src/constants/roles.js
/**
 * üåê H·ªÜ TH·ªêNG PH√ÇN QUY·ªÄN RBAC CHU·∫®N HEALTHCARE ENTERPRISE
 * Author: Senior Dev Team (Healthcare Edition)
 * Description:
 *  - Thi·∫øt k·∫ø chuy√™n bi·ªát cho h·ªá th·ªëng y t·∫ø
 *  - H·ªó tr·ª£ ƒëa d·∫°ng vai tr√≤ v√† quy·ªÅn h·∫°n theo chu·∫©n b·ªánh vi·ªán
 *  - B·∫£o m·∫≠t d·ªØ li·ªáu b·ªánh nh√¢n theo HIPAA v√† c√°c ti√™u chu·∫©n y t·∫ø
 */

const ROLES = Object.freeze({
  // ===== H·ªÜ TH·ªêNG =====
  SUPER_ADMIN: 'SUPER_ADMIN',        // To√†n quy·ªÅn h·ªá th·ªëng (IT System Admin)
  
  // ===== QU·∫¢N TR·ªä =====
  HOSPITAL_ADMIN: 'HOSPITAL_ADMIN',  // Qu·∫£n tr·ªã b·ªánh vi·ªán
  DEPARTMENT_HEAD: 'DEPARTMENT_HEAD', // Tr∆∞·ªüng khoa/ph√≤ng
  
  // ===== Y B√ÅC Sƒ® =====
  DOCTOR: 'DOCTOR',                  // B√°c sƒ© ƒëi·ªÅu tr·ªã
  NURSE: 'NURSE',                    // Y t√°/ƒêi·ªÅu d∆∞·ª°ng
  PHARMACIST: 'PHARMACIST',          // D∆∞·ª£c sƒ©
  LAB_TECHNICIAN: 'LAB_TECHNICIAN',  // K·ªπ thu·∫≠t vi√™n x√©t nghi·ªám
  
  // ===== H√ÄNH CH√çNH =====
  RECEPTIONIST: 'RECEPTIONIST',      // L·ªÖ t√¢n
  BILLING_STAFF: 'BILLING_STAFF',  // Nh√¢n vi√™n k·∫ø to√°n
  
  // ===== NG∆Ø·ªúI D√ôNG =====
  PATIENT: 'PATIENT',                // B·ªánh nh√¢n
  GUEST: 'GUEST',                    // Kh√°ch (ch∆∞a ƒëƒÉng nh·∫≠p)
});

const PERMISSIONS = Object.freeze({
  // ===== AUTHENTICATION & C∆† B·∫¢N =====
  'AUTH.LOGIN': 'AUTH.LOGIN',
  'AUTH.LOGOUT': 'AUTH.LOGOUT', 
  'AUTH.SELF_REGISTER': 'AUTH.SELF_REGISTER',
  
  // ===== ƒêƒÇNG K√ù T√ÄI KHO·∫¢N =====
  'AUTH.REGISTER_PATIENT': 'AUTH.REGISTER_PATIENT',
  'AUTH.REGISTER_RECEPTIONIST': 'AUTH.REGISTER_RECEPTIONIST',
  'AUTH.REGISTER_BILLING_STAFF': 'AUTH.REGISTER_BILLING_STAFF',
  'AUTH.REGISTER_LAB_TECHNICIAN': 'AUTH.REGISTER_LAB_TECHNICIAN',
  'AUTH.REGISTER_PHARMACIST': 'AUTH.REGISTER_PHARMACIST',
  'AUTH.REGISTER_NURSE': 'AUTH.REGISTER_NURSE',
  'AUTH.REGISTER_DOCTOR': 'AUTH.REGISTER_DOCTOR',
  'AUTH.REGISTER_DEPARTMENT_HEAD': 'AUTH.REGISTER_DEPARTMENT_HEAD',
  'AUTH.REGISTER_HOSPITAL_ADMIN': 'AUTH.REGISTER_HOSPITAL_ADMIN',

  // ===== QU·∫¢N L√ù NG∆Ø·ªúI D√ôNG =====
  'USER.VIEW': 'USER.VIEW',
  'USER.CREATE': 'USER.CREATE', // üÜï THI·∫æU
  'USER.UPDATE': 'USER.UPDATE',
  'USER.DISABLE': 'USER.DISABLE',
  'USER.VIEW_SENSITIVE': 'USER.VIEW_SENSITIVE', // Xem th√¥ng tin nh·∫°y c·∫£m
  'USER.MANAGE': 'USER.MANAGE', // üÜï THI·∫æU

  // ===== QU·∫¢N L√ù B·ªÜNH NH√ÇN ===== üÜï THI·∫æU MODULE QUAN TR·ªåNG
  'PATIENT.VIEW': 'PATIENT.VIEW',
  'PATIENT.CREATE': 'PATIENT.CREATE', 
  'PATIENT.UPDATE': 'PATIENT.UPDATE',
  'PATIENT.DELETE': 'PATIENT.DELETE',
  'PATIENT.ADMIT': 'PATIENT.ADMIT',
  'PATIENT.DISCHARGE': 'PATIENT.DISCHARGE',

  // ===== H·ªí S∆† B·ªÜNH √ÅN ===== (Quan tr·ªçng nh·∫•t)
  'MEDICAL.VIEW_RECORDS': 'MEDICAL.VIEW_RECORDS',
  'MEDICAL.CREATE_RECORDS': 'MEDICAL.CREATE_RECORDS',
  'MEDICAL.UPDATE_RECORDS': 'MEDICAL.UPDATE_RECORDS',
  'MEDICAL.DELETE_RECORDS': 'MEDICAL.DELETE_RECORDS',
  'MEDICAL.EXPORT_RECORDS': 'MEDICAL.EXPORT_RECORDS',
  
  // ===== CH·∫®N ƒêO√ÅN & ƒêI·ªÄU TR·ªä =====
  'MEDICAL.CREATE_DIAGNOSIS': 'MEDICAL.CREATE_DIAGNOSIS',
  'MEDICAL.UPDATE_DIAGNOSIS': 'MEDICAL.UPDATE_DIAGNOSIS',
  'MEDICAL.VIEW_TREATMENT_PLANS': 'MEDICAL.VIEW_TREATMENT_PLANS',
  'MEDICAL.CREATE_TREATMENT_PLANS': 'MEDICAL.CREATE_TREATMENT_PLANS',
  'MEDICAL.UPDATE_TREATMENT_PLANS': 'MEDICAL.UPDATE_TREATMENT_PLANS',

  // ===== ƒê∆†N THU·ªêC =====
  'PRESCRIPTION.VIEW': 'PRESCRIPTION.VIEW',
  'PRESCRIPTION.CREATE': 'PRESCRIPTION.CREATE',
  'PRESCRIPTION.UPDATE': 'PRESCRIPTION.UPDATE',
  'PRESCRIPTION.DISPENSE': 'PRESCRIPTION.DISPENSE', // Ph√°t thu·ªëc

  // ===== L·ªäCH H·∫∏N =====
  'APPOINTMENT.VIEW': 'APPOINTMENT.VIEW',
  'APPOINTMENT.CREATE': 'APPOINTMENT.CREATE',
  'APPOINTMENT.UPDATE': 'APPOINTMENT.UPDATE',
  'APPOINTMENT.CANCEL': 'APPOINTMENT.CANCEL',
  'APPOINTMENT.VIEW_SCHEDULE': 'APPOINTMENT.VIEW_SCHEDULE', // L·ªãch l√†m vi·ªác

  // ===== X√âT NGHI·ªÜM & C·∫¨N L√ÇM S√ÄNG =====
  'LAB.VIEW_RESULTS': 'LAB.VIEW_RESULTS',
  'LAB.CREATE_RESULTS': 'LAB.CREATE_RESULTS',
  'LAB.UPDATE_RESULTS': 'LAB.UPDATE_RESULTS',
  'LAB.APPROVE_RESULTS': 'LAB.APPROVE_RESULTS',

  // ===== THANH TO√ÅN & H√ìA ƒê∆†N =====
  'BILL.VIEW': 'BILL.VIEW',
  'BILL.CREATE': 'BILL.CREATE',
  'BILL.UPDATE': 'BILL.UPDATE',
  'BILL.PROCESS_PAYMENTS': 'BILL.PROCESS_PAYMENTS',
  'BILL.VIEW_FINANCIAL_REPORTS': 'BILL.VIEW_FINANCIAL_REPORTS',

  // ===== QU·∫¢N L√ù KHO =====
  'INVENTORY.VIEW': 'INVENTORY.VIEW',
  'INVENTORY.UPDATE': 'INVENTORY.UPDATE',
  'INVENTORY.MANAGE_MEDICATION': 'INVENTORY.MANAGE_MEDICATION',

  // ===== B√ÅO C√ÅO & TH·ªêNG K√ä =====
  'REPORT.VIEW': 'REPORT.VIEW',
  'REPORT.GENERATE': 'REPORT.GENERATE',
  'REPORT.EXPORT': 'REPORT.EXPORT',

  // ===== QUY·ªÄN KH·∫®N C·∫§P ===== (Y t·∫ø ƒë·∫∑c th√π)
  'EMERGENCY.ACCESS': 'EMERGENCY.ACCESS', // Truy c·∫≠p kh·∫©n trong t√¨nh hu·ªëng c·∫•p c·ª©u
  'EMERGENCY.BYPASS_APPROVAL': 'EMERGENCY.BYPASS_APPROVAL',

  // ===== H·ªÜ TH·ªêNG =====
  'SYSTEM.CONFIG': 'SYSTEM.CONFIG',
  'SYSTEM.VIEW_AUDIT_LOG': 'SYSTEM.VIEW_AUDIT_LOG',
});

/**
 * üéØ PH√ÇN QUY·ªÄN CHI TI·∫æT THEO VAI TR√í
 * - M·ªói role c√≥ t·∫≠p permissions ph√π h·ª£p v·ªõi c√¥ng vi·ªác
 * - Tu√¢n th·ªß nguy√™n t·∫Øc "least privilege" trong b·∫£o m·∫≠t y t·∫ø
 */
const ROLE_PERMISSIONS = Object.freeze({
  [ROLES.SUPER_ADMIN]: [
    // To√†n quy·ªÅn h·ªá th·ªëng
    ...Object.values(PERMISSIONS)
  ],

  [ROLES.HOSPITAL_ADMIN]: [
    // Qu·∫£n tr·ªã b·ªánh vi·ªán
    PERMISSIONS['AUTH.LOGIN'], PERMISSIONS['AUTH.LOGOUT'],
    PERMISSIONS['AUTH.REGISTER_DEPARTMENT_HEAD'], PERMISSIONS['AUTH.REGISTER_DOCTOR'],
    PERMISSIONS['AUTH.REGISTER_NURSE'], PERMISSIONS['AUTH.REGISTER_PHARMACIST'],
    PERMISSIONS['AUTH.REGISTER_LAB_TECHNICIAN'], PERMISSIONS['AUTH.REGISTER_BILLING_STAFF'],
    PERMISSIONS['AUTH.REGISTER_RECEPTIONIST'],
    PERMISSIONS['USER.VIEW'], PERMISSIONS['USER.CREATE'], PERMISSIONS['USER.UPDATE'], 
    PERMISSIONS['USER.DISABLE'], PERMISSIONS['USER.MANAGE'], PERMISSIONS['USER.VIEW_SENSITIVE'],
    PERMISSIONS['PATIENT.VIEW'], PERMISSIONS['PATIENT.CREATE'], PERMISSIONS['PATIENT.UPDATE'],
    PERMISSIONS['PATIENT.ADMIT'], PERMISSIONS['PATIENT.DISCHARGE'],
    PERMISSIONS['MEDICAL.VIEW_RECORDS'], PERMISSIONS['MEDICAL.EXPORT_RECORDS'],
    PERMISSIONS['APPOINTMENT.VIEW'], PERMISSIONS['APPOINTMENT.VIEW_SCHEDULE'],
    PERMISSIONS['LAB.VIEW_RESULTS'], PERMISSIONS['BILL.VIEW'],
    PERMISSIONS['BILL.VIEW_FINANCIAL_REPORTS'], PERMISSIONS['REPORT.VIEW'],
    PERMISSIONS['REPORT.GENERATE'], PERMISSIONS['REPORT.EXPORT'],
    PERMISSIONS['EMERGENCY.ACCESS'], PERMISSIONS['SYSTEM.VIEW_AUDIT_LOG'],
  ],

  [ROLES.DEPARTMENT_HEAD]: [
    // Tr∆∞·ªüng khoa
    PERMISSIONS['AUTH.LOGIN'], PERMISSIONS['AUTH.LOGOUT'],
    PERMISSIONS['AUTH.REGISTER_DOCTOR'], PERMISSIONS['AUTH.REGISTER_NURSE'],
    PERMISSIONS['AUTH.REGISTER_LAB_TECHNICIAN'],
    PERMISSIONS['USER.VIEW'], PERMISSIONS['USER.UPDATE'],
    PERMISSIONS['PATIENT.VIEW'], PERMISSIONS['PATIENT.CREATE'], PERMISSIONS['PATIENT.UPDATE'],
    PERMISSIONS['PATIENT.ADMIT'], PERMISSIONS['PATIENT.DISCHARGE'],
    PERMISSIONS['MEDICAL.VIEW_RECORDS'], PERMISSIONS['MEDICAL.CREATE_RECORDS'],
    PERMISSIONS['MEDICAL.UPDATE_RECORDS'], PERMISSIONS['MEDICAL.EXPORT_RECORDS'],
    PERMISSIONS['MEDICAL.CREATE_DIAGNOSIS'], PERMISSIONS['MEDICAL.UPDATE_DIAGNOSIS'],
    PERMISSIONS['MEDICAL.VIEW_TREATMENT_PLANS'], PERMISSIONS['MEDICAL.CREATE_TREATMENT_PLANS'],
    PERMISSIONS['MEDICAL.UPDATE_TREATMENT_PLANS'],
    PERMISSIONS['PRESCRIPTION.VIEW'], PERMISSIONS['PRESCRIPTION.CREATE'],
    PERMISSIONS['APPOINTMENT.VIEW'], PERMISSIONS['APPOINTMENT.CREATE'],
    PERMISSIONS['APPOINTMENT.UPDATE'], PERMISSIONS['APPOINTMENT.VIEW_SCHEDULE'],
    PERMISSIONS['LAB.VIEW_RESULTS'], PERMISSIONS['LAB.APPROVE_RESULTS'],
    PERMISSIONS['REPORT.VIEW'], PERMISSIONS['REPORT.GENERATE'],
    PERMISSIONS['EMERGENCY.ACCESS'],
  ],

  [ROLES.DOCTOR]: [
    // B√°c sƒ© ƒëi·ªÅu tr·ªã
    PERMISSIONS['AUTH.LOGIN'], PERMISSIONS['AUTH.LOGOUT'],
    PERMISSIONS['USER.VIEW'],
    PERMISSIONS['PATIENT.VIEW'], PERMISSIONS['PATIENT.CREATE'], PERMISSIONS['PATIENT.UPDATE'],
    PERMISSIONS['MEDICAL.VIEW_RECORDS'], PERMISSIONS['MEDICAL.CREATE_RECORDS'],
    PERMISSIONS['MEDICAL.UPDATE_RECORDS'],
    PERMISSIONS['MEDICAL.CREATE_DIAGNOSIS'], PERMISSIONS['MEDICAL.UPDATE_DIAGNOSIS'],
    PERMISSIONS['MEDICAL.VIEW_TREATMENT_PLANS'], PERMISSIONS['MEDICAL.CREATE_TREATMENT_PLANS'],
    PERMISSIONS['MEDICAL.UPDATE_TREATMENT_PLANS'],
    PERMISSIONS['PRESCRIPTION.VIEW'], PERMISSIONS['PRESCRIPTION.CREATE'],
    PERMISSIONS['PRESCRIPTION.UPDATE'],
    PERMISSIONS['APPOINTMENT.VIEW'], PERMISSIONS['APPOINTMENT.CREATE'],
    PERMISSIONS['APPOINTMENT.UPDATE'], PERMISSIONS['APPOINTMENT.VIEW_SCHEDULE'],
    PERMISSIONS['LAB.VIEW_RESULTS'], PERMISSIONS['LAB.CREATE_RESULTS'],
    PERMISSIONS['EMERGENCY.ACCESS'],
  ],

  [ROLES.NURSE]: [
    // Y t√°/ƒêi·ªÅu d∆∞·ª°ng
    PERMISSIONS['AUTH.LOGIN'], PERMISSIONS['AUTH.LOGOUT'],
    PERMISSIONS['USER.VIEW'],
    PERMISSIONS['PATIENT.VIEW'], PERMISSIONS['PATIENT.UPDATE'],
    PERMISSIONS['MEDICAL.VIEW_RECORDS'], PERMISSIONS['MEDICAL.UPDATE_RECORDS'],
    PERMISSIONS['MEDICAL.VIEW_TREATMENT_PLANS'], PERMISSIONS['MEDICAL.UPDATE_TREATMENT_PLANS'],
    PERMISSIONS['PRESCRIPTION.VIEW'], PERMISSIONS['PRESCRIPTION.DISPENSE'],
    PERMISSIONS['APPOINTMENT.VIEW'], PERMISSIONS['APPOINTMENT.UPDATE'],
    PERMISSIONS['APPOINTMENT.VIEW_SCHEDULE'],
    PERMISSIONS['LAB.VIEW_RESULTS'], PERMISSIONS['LAB.CREATE_RESULTS'],
    PERMISSIONS['EMERGENCY.ACCESS'],
  ],

  [ROLES.PHARMACIST]: [
    // D∆∞·ª£c sƒ©
    PERMISSIONS['AUTH.LOGIN'], PERMISSIONS['AUTH.LOGOUT'],
    PERMISSIONS['USER.VIEW'],
    PERMISSIONS['PATIENT.VIEW'],
    PERMISSIONS['PRESCRIPTION.VIEW'], PERMISSIONS['PRESCRIPTION.DISPENSE'],
    PERMISSIONS['INVENTORY.VIEW'], PERMISSIONS['INVENTORY.UPDATE'],
    PERMISSIONS['INVENTORY.MANAGE_MEDICATION'],
  ],

  [ROLES.LAB_TECHNICIAN]: [
    // K·ªπ thu·∫≠t vi√™n x√©t nghi·ªám
    PERMISSIONS['AUTH.LOGIN'], PERMISSIONS['AUTH.LOGOUT'],
    PERMISSIONS['USER.VIEW'],
    PERMISSIONS['PATIENT.VIEW'],
    PERMISSIONS['LAB.VIEW_RESULTS'], PERMISSIONS['LAB.CREATE_RESULTS'],
    PERMISSIONS['LAB.UPDATE_RESULTS'],
  ],

  [ROLES.RECEPTIONIST]: [
    // L·ªÖ t√¢n
    PERMISSIONS['AUTH.LOGIN'], PERMISSIONS['AUTH.LOGOUT'],
    PERMISSIONS['AUTH.REGISTER_PATIENT'],
    PERMISSIONS['USER.VIEW'],
    PERMISSIONS['PATIENT.VIEW'], PERMISSIONS['PATIENT.CREATE'], PERMISSIONS['PATIENT.UPDATE'],
    PERMISSIONS['APPOINTMENT.VIEW'], PERMISSIONS['APPOINTMENT.CREATE'],
    PERMISSIONS['APPOINTMENT.UPDATE'], PERMISSIONS['APPOINTMENT.CANCEL'],
    PERMISSIONS['APPOINTMENT.VIEW_SCHEDULE'],
  ],

  [ROLES.BILLING_STAFF]: [
    // Nh√¢n vi√™n k·∫ø to√°n
    PERMISSIONS['AUTH.LOGIN'], PERMISSIONS['AUTH.LOGOUT'],
    PERMISSIONS['USER.VIEW'],
    PERMISSIONS['PATIENT.VIEW'],
    PERMISSIONS['BILL.VIEW'], PERMISSIONS['BILL.CREATE'],
    PERMISSIONS['BILL.UPDATE'], PERMISSIONS['BILL.PROCESS_PAYMENTS'],
    PERMISSIONS['BILL.VIEW_FINANCIAL_REPORTS'],
  ],

  [ROLES.PATIENT]: [
    // B·ªánh nh√¢n
    PERMISSIONS['AUTH.LOGIN'], PERMISSIONS['AUTH.LOGOUT'],
    PERMISSIONS['MEDICAL.VIEW_RECORDS'], // Ch·ªâ xem c·ªßa b·∫£n th√¢n
    PERMISSIONS['PRESCRIPTION.VIEW'],   // Ch·ªâ xem c·ªßa b·∫£n th√¢n
    PERMISSIONS['APPOINTMENT.VIEW'],    // Ch·ªâ xem c·ªßa b·∫£n th√¢n
    PERMISSIONS['APPOINTMENT.CREATE'],  // ƒê·∫∑t l·ªãch h·∫πn
    PERMISSIONS['APPOINTMENT.CANCEL'],  // H·ªßy l·ªãch c·ªßa b·∫£n th√¢n
    PERMISSIONS['BILL.VIEW'],           // Ch·ªâ xem c·ªßa b·∫£n th√¢n
  ],

  [ROLES.GUEST]: [
    // Kh√°ch (ch∆∞a ƒëƒÉng nh·∫≠p)
    PERMISSIONS['AUTH.LOGIN'],
    PERMISSIONS['AUTH.SELF_REGISTER'],        // T·ª± ƒëƒÉng k√Ω t√†i kho·∫£n b·ªánh nh√¢n
  ],
});

/**
 * üè• HIERARCHY CHU·∫®N Y T·∫æ - S·ª¨A L·∫†I CHO ƒê√öNG
 * - Th·ª© t·ª± t·ª´ cao xu·ªëng th·∫•p
 * - Ph·∫£n √°nh c∆° c·∫•u t·ªï ch·ª©c b·ªánh vi·ªán th·ª±c t·∫ø
 */
const ROLE_HIERARCHY = Object.freeze({
  [ROLES.SUPER_ADMIN]: 100,
  [ROLES.HOSPITAL_ADMIN]: 90,
  [ROLES.DEPARTMENT_HEAD]: 80,
  [ROLES.DOCTOR]: 70,
  [ROLES.PHARMACIST]: 65,
  [ROLES.NURSE]: 60,
  [ROLES.LAB_TECHNICIAN]: 55,
  [ROLES.BILLING_STAFF]: 50,
  [ROLES.RECEPTIONIST]: 45,
  [ROLES.PATIENT]: 10,
  [ROLES.GUEST]: 0,
});

/**
 * üß© H√ÄM H·ªñ TR·ª¢ KI·ªÇM TRA QUY·ªÄN
 * Ki·ªÉm tra xem vai tr√≤ c√≥ quy·ªÅn th·ª±c hi·ªán h√†nh ƒë·ªông kh√¥ng
 * @param {string} role - Vai tr√≤ ng∆∞·ªùi d√πng
 * @param {string} permission - Quy·ªÅn c·∫ßn ki·ªÉm tra
 * @returns {boolean}
 */
function hasPermission(role, permission) {
  if (!role || !permission) return false;
  const allowed = ROLE_PERMISSIONS[role];
  if (!allowed) return false;
  return allowed.includes(permission);
}

/**
 * ‚ö° KI·ªÇM TRA QUY·ªÄN T·∫†O ROLE - S·ª¨A L·∫†I CHO ƒê√öNG
 * ƒê·∫£m b·∫£o ng∆∞·ªùi d√πng ch·ªâ c√≥ th·ªÉ t·∫°o t√†i kho·∫£n c·∫•p th·∫•p h∆°n
 * @param {string} currentRole - Vai tr√≤ hi·ªán t·∫°i
 * @param {string} targetRole - Vai tr√≤ mu·ªën t·∫°o
 * @returns {boolean}
 */
function canCreateRole(currentRole, targetRole) {
  const currentLevel = ROLE_HIERARCHY[currentRole];
  const targetLevel = ROLE_HIERARCHY[targetRole];
  
  if (currentLevel === undefined || targetLevel === undefined) {
    return false;
  }
  
  // Ch·ªâ ƒë∆∞·ª£c t·∫°o role c√≥ level th·∫•p h∆°n
  return currentLevel > targetLevel;
}

/**
 * üö® KI·ªÇM TRA QUY·ªÄN TRUY C·∫¨P D·ªÆ LI·ªÜU B·ªÜNH NH√ÇN
 * Quan tr·ªçng: Tu√¢n th·ªß HIPAA v√† b·∫£o v·ªá quy·ªÅn ri√™ng t∆∞
 * @param {string} userRole - Vai tr√≤ ng∆∞·ªùi truy c·∫≠p
 * @param {string} patientId - ID b·ªánh nh√¢n
 * @param {string} accessorId - ID ng∆∞·ªùi truy c·∫≠p
 * @param {boolean} isEmergency - C√≥ ph·∫£i t√¨nh hu·ªëng kh·∫©n c·∫•p
 * @returns {boolean}
 */
function canAccessPatientData(userRole, patientId, accessorId, isEmergency = false) {
  // üöë TR∆Ø·ªúNG H·ª¢P KH·∫®N C·∫§P: Cho ph√©p truy c·∫≠p
  if (isEmergency && hasPermission(userRole, PERMISSIONS['EMERGENCY.ACCESS'])) {
    return true;
  }

  // üë§ B·ªÜNH NH√ÇN: Ch·ªâ xem d·ªØ li·ªáu c·ªßa ch√≠nh m√¨nh
  if (userRole === ROLES.PATIENT) {
    return patientId === accessorId;
  }

  // üè• NH√ÇN VI√äN Y T·∫æ: ƒê∆∞·ª£c xem theo ph√¢n quy·ªÅn
  const medicalStaff = [
    ROLES.DOCTOR, ROLES.NURSE, ROLES.DEPARTMENT_HEAD, 
    ROLES.HOSPITAL_ADMIN, ROLES.SUPER_ADMIN
  ];
  
  if (medicalStaff.includes(userRole)) {
    return hasPermission(userRole, PERMISSIONS['MEDICAL.VIEW_RECORDS']);
  }

  // üè¢ NH√ÇN VI√äN H√ÄNH CH√çNH: C√≥ quy·ªÅn h·∫°n ch·∫ø
  const adminStaff = [ROLES.RECEPTIONIST, ROLES.BILLING_STAFF];
  if (adminStaff.includes(userRole)) {
    return hasPermission(userRole, PERMISSIONS['PATIENT.VIEW']);
  }

  return false;
}

/**
 * üìä L·∫§Y DANH S√ÅCH ROLE C√ì TH·ªÇ T·∫†O
 * @param {string} currentRole - Vai tr√≤ hi·ªán t·∫°i
 * @returns {string[]}
 */
function getCreatableRoles(currentRole) {
  return Object.keys(ROLE_HIERARCHY).filter(targetRole => 
    canCreateRole(currentRole, targetRole)
  );
}

/**
 * üîç KI·ªÇM TRA QUY·ªÄN THEO MODULE
 * @param {string} role - Vai tr√≤
 * @param {string} module - Module c·∫ßn ki·ªÉm tra (USER, MEDICAL, etc.)
 * @returns {boolean}
 */
function hasModuleAccess(role, module) {
  const modulePermissions = Object.keys(PERMISSIONS).filter(p => 
    p.startsWith(`${module}.`)
  );
  
  return modulePermissions.some(permission => hasPermission(role, permission));
}

/**
 * üÜï H√ÄM M·ªöI: KI·ªÇM TRA EMERGENCY ACCESS
 * @param {string} role - Vai tr√≤
 * @returns {boolean}
 */
function hasEmergencyAccess(role) {
  return hasPermission(role, PERMISSIONS['EMERGENCY.ACCESS']);
}

/**
 * üÜï H√ÄM M·ªöI: L·∫§Y T·∫§T C·∫¢ PERMISSIONS C·ª¶A ROLE
 * @param {string} role - Vai tr√≤
 * @returns {string[]}
 */
function getRolePermissions(role) {
  return ROLE_PERMISSIONS[role] || [];
}

module.exports = {
  ROLES,
  PERMISSIONS,
  ROLE_PERMISSIONS,
  ROLE_HIERARCHY,
  hasPermission,
  canCreateRole,
  canAccessPatientData,
  getCreatableRoles,
  hasModuleAccess,
  hasEmergencyAccess, // üÜï TH√äM
  getRolePermissions, // üÜï TH√äM
};