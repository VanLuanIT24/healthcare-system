const Joi = require('joi');
const { commonSchemas } = require('../middlewares/validation.middleware');

/**
 * üõ°Ô∏è VALIDATION SCHEMAS CHO AUTHENTICATION
 * - X√°c th·ª±c d·ªØ li·ªáu ƒë·∫ßu v√†o cho c√°c API auth
 * - Tu√¢n th·ªß chu·∫©n b·∫£o m·∫≠t healthcare
 */

const authValidation = {
  // üéØ ƒêƒÇNG NH·∫¨P
  login: {
    body: Joi.object({
      email: commonSchemas.email.required(),
      password: Joi.string().min(1).required().messages({
        'string.empty': 'M·∫≠t kh·∫©u kh√¥ng ƒë∆∞·ª£c ƒë·ªÉ tr·ªëng',
        'any.required': 'M·∫≠t kh·∫©u l√† b·∫Øt bu·ªôc'
      })
    })
  },

  // üéØ ƒêƒÇNG K√ù USER
  registerUser: {
    body: Joi.object({
      email: commonSchemas.email.required(),
      password: Joi.string()
        .min(8)
        .pattern(/^(?=.*[a-z])(?=.*[A-Z])(?=.*\d)/)
        .required()
        .messages({
          'string.min': 'M·∫≠t kh·∫©u ph·∫£i c√≥ √≠t nh·∫•t 8 k√Ω t·ª±',
          'string.pattern.base': 'M·∫≠t kh·∫©u ph·∫£i ch·ª©a √≠t nh·∫•t 1 ch·ªØ hoa, 1 ch·ªØ th∆∞·ªùng v√† 1 s·ªë',
          'any.required': 'M·∫≠t kh·∫©u l√† b·∫Øt bu·ªôc'
        }),
      confirmPassword: Joi.string().valid(Joi.ref('password')).required().messages({
        'any.only': 'M·∫≠t kh·∫©u x√°c nh·∫≠n kh√¥ng kh·ªõp',
        'any.required': 'Vui l√≤ng x√°c nh·∫≠n m·∫≠t kh·∫©u'
      }),
      personalInfo: Joi.object({
        firstName: Joi.string().min(2).max(50).required().messages({
          'string.min': 'H·ªç ph·∫£i c√≥ √≠t nh·∫•t 2 k√Ω t·ª±',
          'string.max': 'H·ªç kh√¥ng ƒë∆∞·ª£c v∆∞·ª£t qu√° 50 k√Ω t·ª±',
          'any.required': 'H·ªç l√† b·∫Øt bu·ªôc'
        }),
        lastName: Joi.string().min(2).max(50).required().messages({
          'string.min': 'T√™n ph·∫£i c√≥ √≠t nh·∫•t 2 k√Ω t·ª±',
          'string.max': 'T√™n kh√¥ng ƒë∆∞·ª£c v∆∞·ª£t qu√° 50 k√Ω t·ª±',
          'any.required': 'T√™n l√† b·∫Øt bu·ªôc'
        }),
        dateOfBirth: commonSchemas.date.required(),
        gender: Joi.string().valid('MALE', 'FEMALE', 'OTHER').required(),
        phone: commonSchemas.phone.required()
      }).required(),
      role: Joi.string().valid(
        'PATIENT', 
        'DOCTOR', 
        'NURSE', 
        'RECEPTIONIST',
        'PHARMACIST',
        'LAB_TECHNICIAN',
        'BILLING_STAFF'
      ).default('PATIENT')
    })
  },

  // üéØ QU√äN M·∫¨T KH·∫®U
  forgotPassword: {
    body: Joi.object({
      email: commonSchemas.email.required()
    })
  },

  // üéØ ƒê·∫∂T L·∫†I M·∫¨T KH·∫®U
  resetPassword: {
    body: Joi.object({
      token: Joi.string().required().messages({
        'string.empty': 'Token l√† b·∫Øt bu·ªôc',
        'any.required': 'Token l√† b·∫Øt bu·ªôc'
      }),
      newPassword: Joi.string()
        .min(8)
        .pattern(/^(?=.*[a-z])(?=.*[A-Z])(?=.*\d)/)
        .required()
        .messages({
          'string.min': 'M·∫≠t kh·∫©u ph·∫£i c√≥ √≠t nh·∫•t 8 k√Ω t·ª±',
          'string.pattern.base': 'M·∫≠t kh·∫©u ph·∫£i ch·ª©a √≠t nh·∫•t 1 ch·ªØ hoa, 1 ch·ªØ th∆∞·ªùng v√† 1 s·ªë',
          'any.required': 'M·∫≠t kh·∫©u m·ªõi l√† b·∫Øt bu·ªôc'
        }),
      confirmPassword: Joi.string().valid(Joi.ref('newPassword')).required().messages({
        'any.only': 'M·∫≠t kh·∫©u x√°c nh·∫≠n kh√¥ng kh·ªõp',
        'any.required': 'Vui l√≤ng x√°c nh·∫≠n m·∫≠t kh·∫©u'
      })
    })
  },

  // üéØ ƒê·ªîI M·∫¨T KH·∫®U
  changePassword: {
    body: Joi.object({
      currentPassword: Joi.string().min(1).required().messages({
        'string.empty': 'M·∫≠t kh·∫©u hi·ªán t·∫°i kh√¥ng ƒë∆∞·ª£c ƒë·ªÉ tr·ªëng',
        'any.required': 'M·∫≠t kh·∫©u hi·ªán t·∫°i l√† b·∫Øt bu·ªôc'
      }),
      newPassword: Joi.string()
        .min(8)
        .pattern(/^(?=.*[a-z])(?=.*[A-Z])(?=.*\d)/)
        .required()
        .messages({
          'string.min': 'M·∫≠t kh·∫©u m·ªõi ph·∫£i c√≥ √≠t nh·∫•t 8 k√Ω t·ª±',
          'string.pattern.base': 'M·∫≠t kh·∫©u m·ªõi ph·∫£i ch·ª©a √≠t nh·∫•t 1 ch·ªØ hoa, 1 ch·ªØ th∆∞·ªùng v√† 1 s·ªë',
          'any.required': 'M·∫≠t kh·∫©u m·ªõi l√† b·∫Øt bu·ªôc'
        }),
      confirmPassword: Joi.string().valid(Joi.ref('newPassword')).required().messages({
        'any.only': 'M·∫≠t kh·∫©u x√°c nh·∫≠n kh√¥ng kh·ªõp',
        'any.required': 'Vui l√≤ng x√°c nh·∫≠n m·∫≠t kh·∫©u m·ªõi'
      })
    })
  },

  // üéØ REFRESH TOKEN
  refreshToken: {
    body: Joi.object({
      refreshToken: Joi.string().required().messages({
        'string.empty': 'Refresh token l√† b·∫Øt bu·ªôc',
        'any.required': 'Refresh token l√† b·∫Øt bu·ªôc'
      })
    })
  },

  // üéØ VERIFY EMAIL
  verifyEmail: {
    params: Joi.object({
      token: Joi.string().required()
    })
  },

  // üéØ RESEND VERIFICATION EMAIL
  resendVerification: {
    body: Joi.object({
      email: commonSchemas.email.required()
    })
  }
};

module.exports = authValidation;