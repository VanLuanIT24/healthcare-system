// src/models/auditLog.model.js
const mongoose = require('mongoose');

/**
 * SCHEMA NH·∫¨T K√ù KI·ªÇM TRA (AUDIT LOG)
 * - Ghi l·∫°i t·∫•t c·∫£ h√†nh ƒë·ªông quan tr·ªçng trong h·ªá th·ªëng
 * - Ph·ª•c v·ª• cho m·ª•c ƒë√≠ch ki·ªÉm tra, gi√°m s√°t v√† b·∫£o m·∫≠t
 */
const AuditLogSchema = new mongoose.Schema({
  // NG∆Ø·ªúI TH·ª∞C HI·ªÜN H√ÄNH ƒê·ªòNG
  actor: { 
    type: mongoose.Schema.Types.ObjectId, 
    ref: 'User',
    required: true 
  },
  
  // H√ÄNH ƒê·ªòNG ƒê∆Ø·ª¢C TH·ª∞C HI·ªÜN
  action: { 
    type: String, 
    required: true,
    index: true // Index ƒë·ªÉ t√¨m ki·∫øm hi·ªáu qu·∫£
  }, // V√≠ d·ª•: 'LOGIN_SUCCESS', 'CREATE_USER', 'UPDATE_PROFILE'
  
  // ƒê·ªêI T∆Ø·ª¢NG B·ªä T√ÅC ƒê·ªòNG (n·∫øu c√≥)
  target: { 
    type: mongoose.Schema.Types.ObjectId, 
    ref: 'User', 
    default: null 
  },
  
  // TH√îNG TIN M·∫†NG V√Ä THI·∫æT B·ªä
  ip: { 
    type: String,
    index: true 
  },
  userAgent: { 
    type: String 
  },
  
  // TH√îNG TIN B·ªî SUNG D·∫†NG LINH HO·∫†T
  meta: { 
    type: Object, 
    default: {} 
  }
}, { 
  // T·ª∞ ƒê·ªòNG TH√äM TIMESTAMPS (createdAt, updatedAt)
  timestamps: true 
});

// üîπ T·∫†O INDEX CHO TRUY V·∫§N HI·ªÜU QU·∫¢
AuditLogSchema.index({ actor: 1, createdAt: -1 });
AuditLogSchema.index({ action: 1, createdAt: -1 });
AuditLogSchema.index({ createdAt: -1 });

module.exports = mongoose.model('AuditLog', AuditLogSchema);